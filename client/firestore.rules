rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own profile data
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Users can read/write their own food diary entries
    match /foodDiary/{entryId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Users can read/write their own health metrics
    match /healthMetrics/{metricId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Users can read/write their own favorite recipes
    match /favoriteRecipes/{recipeId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Users can read/write their own goals
    match /userGoals/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Users can read/write their own daily intake data
    match /users/{userId}/daily_intake/{date} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;

      // Food entries subcollection
      match /food_entries/{entryId} {
        allow create: if request.auth != null && request.auth.uid == userId;
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Users can read/write their own goals (alternative path)
    match /users/{userId}/goals/{document} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Public read access for shared recipes, write for owners
    match /sharedRecipes/{recipeId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if resource.data.isPublic == true 
                  || (request.auth != null && request.auth.uid == resource.data.userId);
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // User sessions for analytics
    match /userSessions/{sessionId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Marketing consent data
    match /marketingConsent/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // User logout tracking
    match /userLogouts/{logoutId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Default fallback (deny all)
    match /{document=} {
      allow read, write: if false;
    }
  }
}